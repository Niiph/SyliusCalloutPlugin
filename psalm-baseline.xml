<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.10.0@916b098b008f6de4543892b1e0651c1c3b92cbfa">
  <file src="src/Callout/Checker/Eligibility/CalloutRulesEligibilityChecker.php">
    <MixedArgument occurrences="1">
      <code>$rule</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$rule</code>
    </MixedAssignment>
  </file>
  <file src="src/Callout/Checker/Rule/OnSaleCalloutRuleChecker.php">
    <MixedAssignment occurrences="2">
      <code>$channelPricing</code>
      <code>$originalPrice</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>getChannelPricingForChannel</code>
      <code>getOriginalPrice</code>
      <code>getPrice</code>
    </MixedMethodCall>
    <PossiblyInvalidMethodCall occurrences="1">
      <code>isEmpty</code>
    </PossiblyInvalidMethodCall>
  </file>
  <file src="src/DependencyInjection/Compiler/CompositeCalloutEligibilityCheckerPass.php">
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$id</code>
    </MixedArgumentTypeCoercion>
  </file>
  <file src="src/DependencyInjection/Compiler/RegisterCalloutRuleCheckerPass.php">
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$id</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="5">
      <code>$attributes[0]</code>
      <code>$attributes[0]</code>
      <code>$attributes[0]</code>
      <code>$attributes[0]</code>
      <code>$attributes[0]</code>
    </MixedArrayAccess>
    <MixedArrayOffset occurrences="1">
      <code>$calloutRuleCheckerTypeToLabelMap[$attributes[0]['type']]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="2">
      <code>$attributes</code>
      <code>$calloutRuleCheckerTypeToLabelMap[$attributes[0]['type']]</code>
    </MixedAssignment>
  </file>
  <file src="src/DependencyInjection/Configuration.php">
    <MixedMethodCall occurrences="70">
      <code>addDefaultsIfNotSet</code>
      <code>addDefaultsIfNotSet</code>
      <code>addDefaultsIfNotSet</code>
      <code>addDefaultsIfNotSet</code>
      <code>addDefaultsIfNotSet</code>
      <code>arrayNode</code>
      <code>arrayNode</code>
      <code>arrayNode</code>
      <code>arrayNode</code>
      <code>booleanNode</code>
      <code>cannotBeEmpty</code>
      <code>cannotBeEmpty</code>
      <code>cannotBeEmpty</code>
      <code>cannotBeEmpty</code>
      <code>cannotBeEmpty</code>
      <code>children</code>
      <code>children</code>
      <code>children</code>
      <code>children</code>
      <code>children</code>
      <code>defaultFalse</code>
      <code>defaultFalse</code>
      <code>defaultValue</code>
      <code>defaultValue</code>
      <code>defaultValue</code>
      <code>defaultValue</code>
      <code>defaultValue</code>
      <code>defaultValue</code>
      <code>defaultValue</code>
      <code>defaultValue</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>end</code>
      <code>info</code>
      <code>info</code>
      <code>scalarNode</code>
      <code>scalarNode</code>
      <code>scalarNode</code>
      <code>scalarNode</code>
      <code>scalarNode</code>
      <code>scalarNode</code>
      <code>scalarNode</code>
      <code>scalarNode</code>
      <code>variableNode</code>
      <code>variableNode</code>
    </MixedMethodCall>
    <PossiblyNullReference occurrences="2">
      <code>arrayNode</code>
      <code>booleanNode</code>
    </PossiblyNullReference>
    <PossiblyUndefinedMethod occurrences="2">
      <code>arrayNode</code>
      <code>booleanNode</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="src/DependencyInjection/SetonoSyliusCalloutExtension.php">
    <MixedArgument occurrences="4">
      <code>$config['driver']</code>
      <code>$config['manual_triggering']</code>
      <code>$config['no_rules_eligible']</code>
      <code>$config['resources']</code>
    </MixedArgument>
    <ParamNameMismatch occurrences="1">
      <code>$config</code>
    </ParamNameMismatch>
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;getConfiguration([], $container)</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/EventListener/AbstractCalloutDoctrineEventSubscriber.php">
    <MixedArgument occurrences="1">
      <code>$callout</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$callout</code>
      <code>$product</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="1">
      <code>setUpdatedAt</code>
    </MixedMethodCall>
    <PossiblyInvalidMethodCall occurrences="8">
      <code>add</code>
      <code>add</code>
      <code>clear</code>
      <code>clear</code>
      <code>contains</code>
      <code>contains</code>
      <code>isEmpty</code>
      <code>isEmpty</code>
    </PossiblyInvalidMethodCall>
  </file>
  <file src="src/EventListener/CalloutDoctrineEventSubscriber.php">
    <MixedAssignment occurrences="1">
      <code>$entity</code>
    </MixedAssignment>
  </file>
  <file src="src/EventListener/ProductDoctrineEventSubscriber.php">
    <MixedAssignment occurrences="1">
      <code>$entity</code>
    </MixedAssignment>
  </file>
  <file src="src/Fixture/CalloutFixture.php">
    <UnnecessaryVarAnnotation occurrences="1">
      <code>NodeBuilder</code>
    </UnnecessaryVarAnnotation>
  </file>
  <file src="src/Fixture/Factory/CalloutExampleFactory.php">
    <MixedArgument occurrences="13">
      <code>$channel</code>
      <code>$localeCode</code>
      <code>$localeCode</code>
      <code>$options['code']</code>
      <code>$options['enabled']</code>
      <code>$options['ends_at']</code>
      <code>$options['name']</code>
      <code>$options['name']</code>
      <code>$options['position']</code>
      <code>$options['priority']</code>
      <code>$options['starts_at']</code>
      <code>$options['text']</code>
      <code>$rule</code>
    </MixedArgument>
    <MixedAssignment occurrences="5">
      <code>$channel</code>
      <code>$localeCode</code>
      <code>$localeCode</code>
      <code>$rule</code>
      <code>$translationOptions</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$options['name']</code>
    </MixedReturnStatement>
    <UnusedClosureParam occurrences="1">
      <code>$options</code>
    </UnusedClosureParam>
  </file>
  <file src="src/Fixture/Factory/CalloutRuleExampleFactory.php">
    <MixedArgument occurrences="2">
      <code>$options['configuration']</code>
      <code>$options['type']</code>
    </MixedArgument>
  </file>
  <file src="src/Form/Type/AbstractConfigurableCalloutRuleType.php">
    <MixedArgument occurrences="3">
      <code>$data['type']</code>
      <code>$event-&gt;getData()</code>
      <code>$event-&gt;getData()</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$validationGroups</code>
    </MixedArgumentTypeCoercion>
    <MixedInferredReturnType occurrences="1">
      <code>?string</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$form-&gt;getConfig()-&gt;getOption('configuration_type')</code>
    </MixedReturnStatement>
    <PossiblyInvalidArgument occurrences="2">
      <code>$event-&gt;getData()</code>
      <code>$event-&gt;getData()</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="src/Form/Type/AbstractConfigurationCollectionType.php">
    <MixedArgument occurrences="3">
      <code>$options['entry_options']</code>
      <code>$options['entry_type']</code>
      <code>$options['prototype_name']</code>
    </MixedArgument>
    <MixedArrayOffset occurrences="1">
      <code>$view-&gt;vars['prototypes'][$type]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="2">
      <code>$prototype</code>
      <code>$type</code>
    </MixedAssignment>
  </file>
  <file src="src/Form/Type/CalloutType.php">
    <MixedMethodCall occurrences="1">
      <code>getCode</code>
    </MixedMethodCall>
  </file>
  <file src="src/Message/Command/AbstractCalloutCommand.php">
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>integer</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Message/Command/AssignEligibleCalloutsToProduct.php">
    <MixedAssignment occurrences="1">
      <code>$product</code>
    </MixedAssignment>
  </file>
  <file src="src/Message/Handler/AssignEligibleCalloutsToProductsHandler.php">
    <MixedArgument occurrences="1">
      <code>$qb</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$qb</code>
    </MixedAssignment>
    <PossiblyUndefinedMethod occurrences="1">
      <code>createQueryBuilder</code>
    </PossiblyUndefinedMethod>
  </file>
  <file src="src/Model/Callout.php">
    <InvalidReturnStatement occurrences="2">
      <code>$this-&gt;channels</code>
      <code>$this-&gt;rules</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="2">
      <code>Collection</code>
      <code>Collection</code>
    </InvalidReturnType>
    <InvalidToString occurrences="1">
      <code>string</code>
    </InvalidToString>
    <NullableReturnStatement occurrences="1">
      <code>$this-&gt;getName()</code>
    </NullableReturnStatement>
    <PossiblyInvalidMethodCall occurrences="7">
      <code>add</code>
      <code>add</code>
      <code>contains</code>
      <code>contains</code>
      <code>isEmpty</code>
      <code>removeElement</code>
      <code>removeElement</code>
    </PossiblyInvalidMethodCall>
    <PropertyNotSetInConstructor occurrences="3">
      <code>$code</code>
      <code>$id</code>
      <code>$name</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Model/CalloutInterface.php">
    <MismatchingDocblockReturnType occurrences="1">
      <code>Collection|CalloutRuleInterface[]</code>
    </MismatchingDocblockReturnType>
  </file>
  <file src="src/Model/CalloutRule.php">
    <InvalidToString occurrences="1">
      <code>string</code>
    </InvalidToString>
    <MissingConstructor occurrences="1">
      <code>$id</code>
    </MissingConstructor>
    <NullableReturnStatement occurrences="1">
      <code>$this-&gt;getType()</code>
    </NullableReturnStatement>
  </file>
  <file src="src/Model/CalloutTranslation.php">
    <MissingConstructor occurrences="2">
      <code>$id</code>
      <code>$text</code>
    </MissingConstructor>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>$text</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Model/CalloutsAwareInterface.php">
    <MismatchingDocblockReturnType occurrences="2">
      <code>Collection|CalloutInterface[]</code>
      <code>Collection|CalloutInterface[]</code>
    </MismatchingDocblockReturnType>
  </file>
  <file src="src/Repository/CalloutRepository.php">
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1"/>
    <QueryBuilderSetParameter occurrences="1">
      <code>$updatedSince</code>
    </QueryBuilderSetParameter>
  </file>
  <file src="src/Twig/Extension/CalloutExtension.php">
    <MismatchingDocblockParamType occurrences="1">
      <code>Collection|CalloutInterface[]</code>
    </MismatchingDocblockParamType>
    <MismatchingDocblockReturnType occurrences="1">
      <code>Collection|CalloutInterface[]</code>
    </MismatchingDocblockReturnType>
    <MixedInferredReturnType occurrences="1">
      <code>Collection|CalloutInterface[]</code>
    </MixedInferredReturnType>
    <PossiblyInvalidArgument occurrences="1">
      <code>preg_replace('/[^0-9A-Za-z\-]+/', '-', $str)</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast occurrences="1">
      <code>preg_replace('/[^0-9A-Za-z\-]+/', '-', $str)</code>
    </PossiblyInvalidCast>
    <PossiblyNullArgument occurrences="1">
      <code>$callout-&gt;getPosition()</code>
    </PossiblyNullArgument>
  </file>
</files>
